generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  S
  M
  L
  XL
}

enum OrderStatus {
  PENDING
  FAILED
  COMPLETED
}

model User {
  id                  String     @id @default(uuid())
  fullname            String
  email               String     @unique
  phoneNumber         String     @unique
  password            String
  role                String     @default("user") // admin, user, etc.
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  metadata            Json?

  resetToken          String?    @unique
  resetTokenExpiresAt DateTime?

  stripeCustomerId    String?    @unique

  // Relations
  orders              Order[]
}

model Product {
  id          String            @id @default(uuid())
  title       String
  isDeleted   Boolean           @default(false)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  metadata    Json?

  // Relations
  variants    ProductVariant[]
  orderItems  OrderItem[]       @relation("ProductOrderItems")
}

model ProductVariant {
  id          String      @id @default(uuid())
  productId   String
  color       String
  colorCode   String?
  size        Size
  img         String
  price       Float
  stock       Int          @default(0)
  isDeleted   Boolean      @default(false)
  metadata    Json?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // Relations
  product     Product      @relation(fields: [productId], references: [id])
  orderItems  OrderItem[]  @relation("VariantOrderItems")

  // Composite unique constraint
  @@unique([productId, color, size])
}


model Order {
  id          String       @id @default(uuid())
  orderNumber Int          @unique @default(autoincrement())
  userId      String
  amount      Float
  date        String
  orderStatus OrderStatus   @default(PENDING)
  sessionId   String?       @unique
  metadata    Json?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  user        User          @relation(fields: [userId], references: [id])
  products    OrderItem[]
}

model OrderItem {
  id           String          @id @default(uuid())
  orderId      String
  productId    String?
  variantId    String?
  quantity     Int             @default(1)
  price        Float
  metadata     Json?

  // Relations
  order        Order           @relation(fields: [orderId], references: [id])
  product      Product?        @relation("ProductOrderItems", fields: [productId], references: [id])
  variant      ProductVariant? @relation("VariantOrderItems", fields: [variantId], references: [id])
}
